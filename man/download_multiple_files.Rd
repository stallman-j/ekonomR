% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_download.R
\name{download_multiple_files}
\alias{download_multiple_files}
\title{Download Multiple Files}
\usage{
download_multiple_files(
  data_subfolder = NULL,
  data_raw = NULL,
  base_url,
  sub_urls = NULL,
  filenames = NULL,
  pass_protected = FALSE,
  zip_file = FALSE,
  username = NULL,
  password = NULL
)
}
\arguments{
\item{data_subfolder}{name of subfolder in the raw_data folder to place data in. Could be nested several folders, e.g. \code{data_subfolder = file.path("WPP","2024")} and \code{data_raw = NULL} will download into \code{here::here("data","01_raw","WPP","2024")}. NULL defaults to just downloading into \code{data_raw}. Creates the folders if they don't already exist.}

\item{data_raw}{location (file path) of raw data folder. Default input of NULL sets this to \code{here::here("data","01_raw")}}

\item{base_url}{the url of the folder to download. This should be the thing that is common to all the URLs you're downloading. Must be provided. If you're using this to download a single file, could also just be the whole URL, but if that's your use-case why not use the \code{download_data()} function instead. You can include or omit the final backslash, i.e. if the files are \code{"https://some-website/subpage/file1.csv"} and \code{"https://some-website/subpage/file2.csv"}, then you could write either \code{base_url = "https://some-website/subpage"} or \code{base_url = "https://some-website/subpage/"}. You CANNOT just input a vector into \code{base_url}.}

\item{sub_urls}{the parts of the URL that differ. Default to NULL assumes you're using this function like \code{download_data()} to download a single file. e.g. if the URLs are \code{"https://some-website/subpage/file1.csv"} and \code{"https://some-website/subpage/file2.csv"}, you would want \code{base_url = "https://some-website/subpage"} and \code{sub_urls = c("file1.csv","file2.csv")}.}

\item{filenames}{vector of character strings. Default of \code{NULL} assumes that the filenames you're downloading are the same as the sub_urls. This might not be true if the \code{sub_urls} are complicated. For example, if the URLs were \code{"https://some-website/subpage-1/file1.zip"} and \code{"https://some-website/subpage-2/file2.zip"}, you would want \code{base_url = "https://some-website"}, \code{sub_urls = c("subpage-1/file1.zip","subpage-2/file2.zip")}, and \code{filenames = c("file.zip","file2.zip")}. If on the other hand your URLs are \code{"https://some-website/subpage/file1.zip"} and \code{"https://some-website/subpage/file2.zip"}, then you would want \code{base_url = "https://some-website/subpage"} and \code{sub_urls = c("file1.zip","file2.zip")}. For this, you could set \code{filenames = NULL} or \code{filenames = c("file1.zip","file2.zip")} or rename the files to say \verb{filenames = c("1992.zip",1993.zip")}.}

\item{pass_protected}{logical, default is \code{FALSE}. Set to \code{TRUE} if the data requires a simple username and login. If \code{pass_protected = TRUE} and \code{username = NULL} and \code{password = NULL}, then the system will prompt you for the username and password for EVERY new download. Avoid this by setting username and password.}

\item{zip_file}{logical, whether you're downloading files of the form ".zip". If so, setting \code{zip_file} to \code{TRUE} will attempt to unzip these files and store them in the folder given by \code{file.path(data_raw,data_subfolder)}. Default of FALSE doesn't make attempt to extract, so if you're having unzipping troubles even if you're downloading .zip files, set \code{zip_file = FALSE} to trouble-shoot and manually unzip.}

\item{username}{if \code{pass_protected} is \code{TRUE}, you'll need to input the username. Default of \code{NULL} asks for user input. Note this is required for EACH URL you want to download. If you're planning to batch download, you can input your username as a character vector. Note that this is NOT secure. It's on the to-do list to add this in a secure way.}

\item{password}{if \code{pass_protected} is \code{TRUE}, you need to input a password. Default of \code{NULL} asks for manual input. As this is required for EVERY URL you have, you can input a character vector to get around this. Note, however, that this is NOT a secure method of downloading data. Future updates will at some point fix this.}
}
\description{
\code{download_multiple_files} downloads multiple data files from a website into a sensible default folder. Works for password protected sites, and also unzips basic zip files.
}
\examples{
# example code
years    <- 2020:2022
sub_urls <- paste0("annual_aqi_by_county_",years,".zip")
download_multiple_files(data_subfolder = "EPA", data_raw = NULL, base_url = "https://aqs.epa.gov/aqsweb/airdata/", sub_urls = sub_urls, zip_file = TRUE)

}
